#!/bin/bash
# B"H


source <(helm completion bash) # setup autocomplete for helm
source <(kind completion bash) # setup autocomplete for kind
source <(istioctl completion bash) # setup autocomplete for istioctl
source <(kubectl completion bash) # setup autocomplete for kubectl
alias k=kubectl
complete -F __start_kubectl k


alias getCluster='kubectl config current-context'
alias getClusters='kubectl config get-contexts'

alias setCurrentCluster='kubectl config use-context'

# Switch cluster
# ###########################################################################################################################
# New switch cluster command.
# ###########################################################################################################################
_get_clusters_contexts_completions()
{
        COMPREPLY=($(compgen -W "$(kubectl config view -o jsonpath='{.contexts[*].name}')" -- "${COMP_WORDS[1]}"))
}
# Set a command to execute the complete function.
# complete -F [complete_function] [command]
complete -F _get_clusters_contexts_completions set_cluster
# Set alias of kubectl command for changing clusters.
alias set_cluster='kubectl config use-context'



# Namespaces
# ###############################################################################################################
# New switch namespace command.
# ###############################################################################################################
# See line 21 for explenation.
_get_namespaces_completions()
{
        COMPREPLY=($(compgen -W "$(kubectl get ns | awk ' NR> 1 {print $1}')" -- "${COMP_WORDS[1]}"))
}
complete -F _get_namespaces_completions set_namespace

#alias set_namespace='kubectl config set-context $(kubectl config current-context) --namespace='
alias set_namespace='kubectl config set-context --current --namespace'